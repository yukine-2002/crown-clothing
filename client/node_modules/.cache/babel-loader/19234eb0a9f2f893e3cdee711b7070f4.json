{"ast":null,"code":"import { firestore, convertCollectionSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport ShopActionTypes from \"./shop.type\";\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessager => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILUERE,\n  payload: errorMessager\n});\n\nconst fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\n\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionMap = convertCollectionSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error)));\n  };\n};","map":{"version":3,"sources":["D:/Document/VsCode Web/StudyFontEnd/ReactJs/crown-clothing/src/redux/shop/shop.action.js"],"names":["firestore","convertCollectionSnapshotToMap","ShopActionTypes","fetchCollectionsSuccess","collectionsMap","type","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessager","FETCH_COLLECTIONS_FAILUERE","fetchCollectionsStart","FETCH_COLLECTIONS_START","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","collectionMap","catch","error"],"mappings":"AACA,SAASA,SAAT,EAAmBC,8BAAnB,QAAyD,+BAAzD;AACA,OAAOC,eAAP,MAA4B,aAA5B;AAEA,OAAO,MAAMC,uBAAuB,GAAGC,cAAc,KAAK;AACtDC,EAAAA,IAAI,EAACH,eAAe,CAACI,yBADiC;AAEtDC,EAAAA,OAAO,EAACH;AAF8C,CAAL,CAA9C;AAKP,OAAO,MAAMI,uBAAuB,GAAGC,aAAa,KAAK;AACrDJ,EAAAA,IAAI,EAACH,eAAe,CAACQ,0BADgC;AAErDH,EAAAA,OAAO,EAAGE;AAF2C,CAAL,CAA7C;;AAKP,MAAME,qBAAqB,GAAG,OAAO;AACjCN,EAAAA,IAAI,EAACH,eAAe,CAACU;AADY,CAAP,CAA9B;;AAIA,OAAO,MAAMC,0BAA0B,GAAG,MAAM;AAC5C,SAAOC,QAAQ,IAAK;AAEhB,UAAMC,aAAa,GAAGf,SAAS,CAACgB,UAAV,CAAqB,aAArB,CAAtB;AAECF,IAAAA,QAAQ,CAACH,qBAAqB,EAAtB,CAAR;AAEDI,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AAEjC,YAAMC,aAAa,GAAGnB,8BAA8B,CAACkB,QAAD,CAApD;AAEAL,MAAAA,QAAQ,CAACX,uBAAuB,CAACiB,aAAD,CAAxB,CAAR;AAED,KANH,EAMKC,KANL,CAMWC,KAAK,IAAIR,QAAQ,CAACN,uBAAuB,CAACc,KAAD,CAAxB,CAN5B;AAOH,GAbD;AAeH,CAhBM","sourcesContent":["\r\nimport { firestore,convertCollectionSnapshotToMap } from \"../../firebase/firebase.utils\";\r\nimport ShopActionTypes from \"./shop.type\";\r\n\r\nexport const fetchCollectionsSuccess = collectionsMap => ({\r\n    type:ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n    payload:collectionsMap\r\n})\r\n\r\nexport const fetchCollectionsFailure = errorMessager => ({\r\n    type:ShopActionTypes.FETCH_COLLECTIONS_FAILUERE,\r\n    payload : errorMessager\r\n})\r\n\r\nconst fetchCollectionsStart = () => ({\r\n    type:ShopActionTypes.FETCH_COLLECTIONS_START\r\n})\r\n\r\nexport const fetchCollectionsStartAsync = () => {\r\n    return dispatch =>  {\r\n\r\n        const collectionRef = firestore.collection('collections');\r\n\r\n         dispatch(fetchCollectionsStart());\r\n\r\n        collectionRef.get().then(snapshot => {\r\n\r\n            const collectionMap = convertCollectionSnapshotToMap(snapshot);\r\n\r\n            dispatch(fetchCollectionsSuccess(collectionMap));\r\n            \r\n          }).catch(error => dispatch(fetchCollectionsFailure(error)));\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}