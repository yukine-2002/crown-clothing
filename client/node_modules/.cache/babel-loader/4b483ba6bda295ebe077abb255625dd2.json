{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsError = error => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: error\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart(collectionRef));\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsError(error.message)));\n  };\n};","map":{"version":3,"sources":["D:/Document/VsCode Web/StudyFontEnd/ReactJs/crown-clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","collectionsMap","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsError","error","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAASC,SAAT,EAAmBC,+BAAnB,QAA0D,+BAA1D;AAGA,OAAO,MAAMC,qBAAqB,GAAGC,cAAc,KAAK;AACtDC,EAAAA,IAAI,EAAEL,eAAe,CAACM;AADgC,CAAL,CAA5C;AAIP,OAAO,MAAMC,uBAAuB,GAAIH,cAAc,KAAK;AACzDC,EAAAA,IAAI,EAAGL,eAAe,CAACQ,yBADkC;AAEzDC,EAAAA,OAAO,EAAGL;AAF+C,CAAL,CAA/C;AAKP,OAAO,MAAMM,qBAAqB,GAAGC,KAAK,KAAK;AAC7CN,EAAAA,IAAI,EAAGL,eAAe,CAACY,yBADsB;AAE7CH,EAAAA,OAAO,EAACE;AAFqC,CAAL,CAAnC;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC9C,SAAOC,QAAQ,IAAI;AACjB,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,CAACY,aAAD,CAAtB,CAAR;AACAA,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACnC,YAAMf,cAAc,GAAGF,+BAA+B,CAACiB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACP,uBAAuB,CAACH,cAAD,CAAxB,CAAR;AACD,KAHD,EAGGgB,KAHH,CAGST,KAAK,IAAIG,QAAQ,CAAEJ,qBAAqB,CAACC,KAAK,CAACU,OAAP,CAAvB,CAH1B;AAID,GAPD;AAQD,CATM","sourcesContent":["import ShopActionTypes from './shop.types';\nimport { firestore,convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\n\nexport const fetchCollectionsStart = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START,\n});\n\nexport const fetchCollectionsSuccess  = collectionsMap => ({\n  type : ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload : collectionsMap\n})\n\nexport const fetchCollectionsError = error => ({\n  type : ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload:error\n})\n\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart(collectionRef))\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap))\n    }).catch(error => dispatch (fetchCollectionsError(error.message)));\n  }\n};\n\n\n"]},"metadata":{},"sourceType":"module"}