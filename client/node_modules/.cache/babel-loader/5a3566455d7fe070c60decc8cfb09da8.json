{"ast":null,"code":"var _jsxFileName = \"D:\\\\Document\\\\VsCode Web\\\\StudyFontEnd\\\\ReactJs\\\\crown-clothing\\\\src\\\\Pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport CollectionOverView from '../../Component/collection-overview/collection-overview.component';\nimport { Route } from 'react-router-dom';\nimport Collections from '../collection/collection.component';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport { updateColelction } from '../../redux/shop/shop.action';\nimport WithSpinner from '../../Component/with-spinner/with-spinner.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ShopPage extends React.Component {\n  constructor() {\n    super();\n    this.unSubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateColelction\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionMap = convertCollectionSnapshotToMap(snapshot);\n      updateColelction(collectionMap);\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        component: CollectionOverView\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:CollectionsId`,\n        component: Collections\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 8\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateColelction: collectionMap => dispatch(updateColelction(collectionMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["D:/Document/VsCode Web/StudyFontEnd/ReactJs/crown-clothing/src/Pages/shop/shop.component.jsx"],"names":["React","CollectionOverView","Route","Collections","firestore","convertCollectionSnapshotToMap","connect","updateColelction","WithSpinner","ShopPage","Component","constructor","unSubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionMap","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,mEAA/B;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,WAAP,MAAwB,oCAAxB;AACA,SAASC,SAAT,EAAmBC,8BAAnB,QAAyD,+BAAzD;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,OAAOC,WAAP,MAAwB,qDAAxB;;;AAEA,MAAMC,QAAN,SAAuBT,KAAK,CAACU,SAA7B,CAAsC;AAEnCC,EAAAA,WAAW,GAAE;AACV;AADU,SAKbC,uBALa,GAKa,IALb;AAEZ;;AAKDC,EAAAA,iBAAiB,GAAE;AAChB,UAAM;AAACN,MAAAA;AAAD,QAAqB,KAAKO,KAAhC;AACA,UAAMC,aAAa,GAAGX,SAAS,CAACY,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACzC,YAAMC,aAAa,GAAGd,8BAA8B,CAACa,QAAD,CAApD;AACAX,MAAAA,gBAAgB,CAACY,aAAD,CAAhB;AACD,KAHD;AAIF;;AAEDC,EAAAA,MAAM,GAAE;AACL,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKP,KAArB;AACA,wBACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACG,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAK,GAAEO,KAAK,CAACC,IAAK,EAAnC;AAAsC,QAAA,SAAS,EAAErB;AAAjD;AAAA;AAAA;AAAA;AAAA,cADH,eAEI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAI,GAAEoB,KAAK,CAACC,IAAK,iBAA5B;AAA8C,QAAA,SAAS,EAAEnB;AAAzD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAMF;;AA3BkC;;AA8BtC,MAAMoB,kBAAkB,GAAGC,QAAQ,KAAK;AACrCjB,EAAAA,gBAAgB,EAAGY,aAAa,IAAIK,QAAQ,CAACjB,gBAAgB,CAACY,aAAD,CAAjB;AADP,CAAL,CAAnC;;AAKA,eAAeb,OAAO,CAAC,IAAD,EAAMiB,kBAAN,CAAP,CAAiCd,QAAjC,CAAf","sourcesContent":["import React from 'react';\r\nimport CollectionOverView from '../../Component/collection-overview/collection-overview.component';\r\nimport { Route } from 'react-router-dom';\r\nimport Collections from '../collection/collection.component';\r\nimport { firestore,convertCollectionSnapshotToMap } from '../../firebase/firebase.utils';\r\nimport {connect} from 'react-redux'\r\nimport { updateColelction } from '../../redux/shop/shop.action';\r\nimport WithSpinner from '../../Component/with-spinner/with-spinner.component';\r\n\r\nclass ShopPage extends React.Component{\r\n\r\n   constructor(){\r\n      super();\r\n   }\r\n\r\n\r\n   unSubscribeFromSnapshot = null;\r\n\r\n   componentDidMount(){\r\n      const {updateColelction} = this.props;\r\n      const collectionRef = firestore.collection('collections');\r\n      \r\n      collectionRef.onSnapshot(async snapshot => {\r\n        const collectionMap = convertCollectionSnapshotToMap(snapshot)\r\n        updateColelction(collectionMap);\r\n      })\r\n   }\r\n\r\n   render(){\r\n      const {match} = this.props;\r\n      return  (\r\n       <div className='shop-page'>\r\n          <Route exact path = {`${match.path}`} component={CollectionOverView} />\r\n           <Route path ={`${match.path}/:CollectionsId`} component={Collections} />\r\n       </div>\r\n    )\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n   updateColelction : collectionMap => dispatch(updateColelction(collectionMap))\r\n})\r\n\r\n   \r\nexport default connect(null,mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}