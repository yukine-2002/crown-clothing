{"ast":null,"code":"import { takeLatest, put, call, all } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { provider, auth, createUserProfileDocument, getCurrentUSer } from '../../firebase/firebase.utils';\nimport { SignInFailure, SignInSuccess, signOutFailure, signOutSuccess } from './user.actions';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(SignInSuccess({\n      id: userSnapshot,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(provider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUSer();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["D:/Document/VsCode Web/StudyFontEnd/ReactJs/crown-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","call","all","UserActionTypes","provider","auth","createUserProfileDocument","getCurrentUSer","SignInFailure","SignInSuccess","signOutFailure","signOutSuccess","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","onEmailSignInStart","EMAIL_SIGN_IN_START","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","userSagas"],"mappings":"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","sourcesContent":["import {takeLatest,put,call,all} from 'redux-saga/effects';\r\n\r\nimport UserActionTypes from './user.types';\r\n\r\nimport { provider,auth,createUserProfileDocument ,getCurrentUSer } from '../../firebase/firebase.utils';\r\n\r\nimport { SignInFailure,SignInSuccess, signOutFailure, signOutSuccess } from './user.actions';\r\n\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth){\r\n    try{\r\n\r\n\r\n        const userRef = yield call(createUserProfileDocument,userAuth);\r\n\r\n        const userSnapshot = yield userRef.get();\r\n\r\n        yield put(\r\n            SignInSuccess({id:userSnapshot,...userSnapshot.data()})\r\n        )\r\n\r\n    }catch(error){\r\n        yield put(SignInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* signInWithGoogle () {\r\n    try{\r\n        const {user} = yield auth.signInWithPopup(provider);\r\n\r\n        yield getSnapshotFromUserAuth(user)\r\n\r\n    }catch(error){\r\n        yield put(SignInFailure(error))\r\n    }\r\n}\r\n\r\n\r\nexport function* signInWithEmail({payload : {email,password}}){\r\n\r\n    try{\r\n\r\n        const {user} = yield auth.signInWithEmailAndPassword(email,password); \r\n\r\n        yield getSnapshotFromUserAuth(user)\r\n\r\n    }catch(error){\r\n        yield put(SignInFailure(error))\r\n    }\r\n\r\n}\r\n\r\nexport function* isUserAuthenticated(){\r\n    try{\r\n\r\n        const userAuth = yield getCurrentUSer();\r\n\r\n        if(!userAuth)\r\n        return;\r\n\r\n        yield getSnapshotFromUserAuth(userAuth)\r\n\r\n    }catch(error){\r\n        yield put(SignInFailure(error))\r\n\r\n    }\r\n}\r\n\r\nexport function* signOut(){\r\n    try{\r\n        yield auth.signOut();\r\n        yield put(signOutSuccess())\r\n    }catch(error){\r\n        yield put(signOutFailure(error))\r\n    }\r\n}\r\n\r\nexport function* onEmailSignInStart(){\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START,signInWithEmail);\r\n}\r\n\r\nexport function* onGoogleSignInStart(){\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START,signInWithGoogle);\r\n}\r\n\r\nexport function* onCheckUserSession(){\r\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION,isUserAuthenticated)\r\n}\r\n\r\nexport function* onSignOutStart (){\r\n    yield takeLatest(UserActionTypes.SIGN_OUT_START,signOut)\r\n}\r\nexport function* userSagas(){\r\n    yield all([call(onGoogleSignInStart),call(onEmailSignInStart),call(isUserAuthenticated),call(onSignOutStart)])\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}