{"ast":null,"code":"import { call, put, takeEvery } from \"@redux-saga/core/effects\";\nimport ShopActionTypes from \"./shop.types\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsSuccess, fetchCollectionsError } from './shop.actions';\nimport { all } from \"redux-saga/effects\";\nexport function* fectchCollectionsAsync() {\n  yield console.log('i am fired');\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsError(error));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fectchCollectionsAsync);\n}\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}","map":{"version":3,"sources":["D:/Code/VsCode Web/StudyFontEnd/ReactJs/crown-clothing/client/src/redux/shop/shop.saga.js"],"names":["call","put","takeEvery","ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsError","all","fectchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","fetchCollectionsStart","FETCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAASA,IAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,0BAApC;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,SAAT,EAAmBC,+BAAnB,QAA0D,+BAA1D;AAEA,SACIC,uBADJ,EAEIC,qBAFJ,QAIO,gBAJP;AAKA,SAASC,GAAT,QAAoB,oBAApB;AACA,OAAO,UAAUC,sBAAV,GAAkC;AACtC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;;AACC,MAAG;AACC,UAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AAEA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AAEA,UAAMC,cAAc,GAAG,MAAMhB,IAAI,CAACK,+BAAD,EAAiCS,QAAjC,CAAjC;AAEA,UAAMb,GAAG,CAACK,uBAAuB,CAACU,cAAD,CAAxB,CAAT;AACH,GARD,CAQC,OAAMC,KAAN,EAAY;AACT,UAAMhB,GAAG,CAACM,qBAAqB,CAACU,KAAD,CAAtB,CAAT;AACH;AAEJ;AAED,OAAO,UAAUC,qBAAV,GAAiC;AACpC,QAAMhB,SAAS,CAACC,eAAe,CAACgB,uBAAjB,EAA0CV,sBAA1C,CAAf;AACH;AAED,OAAO,UAAUW,SAAV,GAAqB;AACxB,QAAMZ,GAAG,CAAC,CAACR,IAAI,CAACkB,qBAAD,CAAL,CAAD,CAAT;AACH","sourcesContent":["import { call,put, takeEvery } from \"@redux-saga/core/effects\";\r\n\r\nimport ShopActionTypes from \"./shop.types\";\r\n\r\nimport { firestore,convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\r\n\r\nimport {\r\n    fetchCollectionsSuccess,\r\n    fetchCollectionsError\r\n\r\n} from './shop.actions'\r\nimport { all } from \"redux-saga/effects\";\r\nexport function* fectchCollectionsAsync(){\r\n   yield console.log('i am fired');\r\n    try{\r\n        const collectionRef = firestore.collection('collections');\r\n        \r\n        const snapshot = yield collectionRef.get();\r\n\r\n        const collectionsMap = yield call(convertCollectionsSnapshotToMap,snapshot);\r\n\r\n        yield put(fetchCollectionsSuccess(collectionsMap));\r\n    }catch(error){\r\n        yield put(fetchCollectionsError(error))\r\n    }\r\n\r\n}\r\n\r\nexport function* fetchCollectionsStart(){\r\n    yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fectchCollectionsAsync)\r\n}\r\n\r\nexport function* shopSagas(){\r\n    yield all([call(fetchCollectionsStart)])\r\n}"]},"metadata":{},"sourceType":"module"}