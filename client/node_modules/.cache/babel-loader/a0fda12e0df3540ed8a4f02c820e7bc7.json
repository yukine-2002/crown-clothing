{"ast":null,"code":"var _jsxFileName = \"D:\\\\Document\\\\VsCode Web\\\\StudyFontEnd\\\\ReactJs\\\\crown-clothing\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { userState, useState } from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { SignInContainer, SignInTitle, ButtonsBarContainer } from './sign-in.styles';\nimport { connect } from 'react-redux';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  _s();\n\n  const [userCrendentials, setUserCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCrendentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault(); // try {\n    //   await auth.signInWithEmailAndPassword(email, password);\n    //   this.setState({ email: '', password: '' });\n    // } catch (error) {\n    //   console.log(error);\n    // }\n\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setUserCredentials({\n      [name]: value\n    });\n    console.log({ ...userCrendentials\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(SignInContainer, {\n    children: [/*#__PURE__*/_jsxDEV(SignInTitle, {\n      children: \"I already have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign in with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"email\",\n        type: \"email\",\n        handleChange: handleChange,\n        value: email,\n        label: \"email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"password\",\n        type: \"password\",\n        value: password,\n        handleChange: handleChange,\n        label: \"password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ButtonsBarContainer, {\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \" Sign in \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"button\",\n          onClick: googleSignInStart,\n          isGoogleSignIn: true,\n          children: \"Sign in with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }, this);\n};\n\n_s(SignIn, \"PgBQqaaXcT+YAQ1RN5QgpgdZuQA=\");\n\n_c = SignIn;\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["D:/Document/VsCode Web/StudyFontEnd/ReactJs/crown-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","userState","useState","FormInput","CustomButton","SignInContainer","SignInTitle","ButtonsBarContainer","connect","googleSignInStart","emailSignInStart","SignIn","userCrendentials","setUserCredentials","email","password","handleSubmit","event","preventDefault","handleChange","value","name","target","console","log","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React ,{userState, useState} from 'react';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\n\nimport {\n  SignInContainer,\n  SignInTitle,\n  ButtonsBarContainer\n} from './sign-in.styles';\n\nimport {connect} from 'react-redux';\n\nimport {googleSignInStart , emailSignInStart} from '../../redux/user/user.actions'\n\nconst  SignIn = ({emailSignInStart,googleSignInStart}) => {\n  \n  const [userCrendentials,setUserCredentials] = useState({email:'',password:''});\n\n const { email, password } = userCrendentials;\n  const  handleSubmit = async event => {\n    event.preventDefault();\n   \n\n    // try {\n    //   await auth.signInWithEmailAndPassword(email, password);\n    //   this.setState({ email: '', password: '' });\n    // } catch (error) {\n    //   console.log(error);\n    // }\n    emailSignInStart(email,password);\n  };\n\n const  handleChange = event => {\n    const { value, name } = event.target;\n\n    setUserCredentials({[name]: value });\n\n    console.log({...userCrendentials})\n  };\n\n \n    \n    return (\n      <SignInContainer>\n        <SignInTitle>I already have an account</SignInTitle>\n        <span>Sign in with your email and password</span>\n\n        <form onSubmit={handleSubmit}>\n          <FormInput\n            name='email'\n            type='email'\n            handleChange={handleChange}\n            value={email}\n            label='email'\n            required\n          />\n          <FormInput\n            name='password'\n            type='password'\n            value={password}\n            handleChange={handleChange}\n            label='password'\n            required\n          />\n          <ButtonsBarContainer>\n            <CustomButton type='submit'> Sign in </CustomButton>\n            <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>\n              Sign in with Google\n            </CustomButton>\n          </ButtonsBarContainer>\n        </form>\n      </SignInContainer>\n    );\n  }\n\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart : () => dispatch(googleSignInStart()),\n  emailSignInStart : (email,password) => dispatch(emailSignInStart({email,password}))\n})\n\n\n\nexport default connect(null,mapDispatchToProps)(SignIn);\n"]},"metadata":{},"sourceType":"module"}